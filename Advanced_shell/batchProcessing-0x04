#!/bin/bash
# Fetch Pokémon data in parallel using background processes and manage them with jobs

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data_parallel"

# Create directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Loop through Pokémon and fetch in background
for POKEMON in "${POKEMONS[@]}"
do
    {
        echo "Fetching data for $POKEMON..."
        RESPONSE=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/$POKEMON.json" "https://pokeapi.co/api/v2/pokemon/$POKEMON")
        if [ "$RESPONSE" -eq 200 ]; then
            echo "Saved data to $OUTPUT_DIR/$POKEMON.json ✅"
        else
            echo "Failed to fetch $POKEMON ❌ (Status: $RESPONSE)"
        fi
    } &
done

# List all background jobs
echo "Current background jobs:"
jobs

# Wait for all background jobs to complete
wait

# Confirm everything finished
echo "🎉 All Pokémon data fetched successfully!"

# Optional cleanup - kill any leftover background processes just in case
kill $(jobs -p) 2>/dev/null
